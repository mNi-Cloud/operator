apiVersion: v1
kind: ServiceAccount
metadata:
  name: mni-cloud
  namespace: mni-cloud
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mni-cloud
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: mni-cloud
  namespace: mni-cloud
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: mni-cloud
  name: mni-cloud.service-account-token
  namespace: mni-cloud
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-api
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-api
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-bs
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-bs
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-ctr
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-ctr
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-dashboard
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-dashboard
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-main
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-main
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-vm
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-vm
---
apiVersion: v1
kind: Service
metadata:
  name: mni-mc-vpc
  namespace: mni-cloud
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: mni-mc-vpc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-api
  name: mni-mc-api
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-api
  template:
    metadata:
      labels:
        app: mni-mc-api
    spec:
      containers:
      - args: []
        env:
        - name: NEXT_PUBLIC_MNI_VPC_ENDPOINT
          value: http://mni-vpc.mni-cloud.svc/vpc/v1alpha1
        - name: NEXT_PUBLIC_MNI_VM_ENDPOINT
          value: http://mni-mc-vm.mni-cloud.svc/vm/v1alpha1
        - name: NEXT_PUBLIC_MNI_CTR_ENDPOINT
          value: http://mni-mc-ctr.mni-cloud.svc/ctr/v1alpha1
        - name: NEXT_PUBLIC_MNI_BS_ENDPOINT
          value: http://mni-mc-bs.mni-cloud.svc/bs/v1alpha1
        - name: NEXTAUTH_URL
          value: url.replacethis
        - name: NEXTAUTH_SECRET
          value: secret.replacethis
        - name: KEYCLOAK_ID
          value: keycloakid.replacethis
        - name: KEYCLOAK_SECRET
          value: keycloaksecret.replacethis
        - name: KEYCLOAK_ISSUER
          value: keycloakurl.replacethis
        image: ghcr.io/mni-cloud/mc-api:main
        imagePullPolicy: Always
        name: mni-mc-api
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-bs
  name: mni-mc-bs
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-bs
  template:
    metadata:
      labels:
        app: mni-mc-bs
    spec:
      containers:
      - args: []
        image: ghcr.io/mni-cloud/mc-bs:main
        imagePullPolicy: Always
        name: mni-mc-bs
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-ctr
  name: mni-mc-ctr
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-ctr
  template:
    metadata:
      labels:
        app: mni-mc-ctr
    spec:
      containers:
      - args: []
        image: ghcr.io/mni-cloud/mc-ctr:main
        imagePullPolicy: Always
        name: mni-mc-ctr
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-dashboard
  name: mni-mc-dashboard
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-dashboard
  template:
    metadata:
      labels:
        app: mni-mc-dashboard
    spec:
      containers:
      - args: []
        image: ghcr.io/mni-cloud/mc-dashboard:main
        imagePullPolicy: Always
        name: mni-mc-dashboard
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-main
  name: mni-mc-main
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-main
  template:
    metadata:
      labels:
        app: mni-mc-main
    spec:
      containers:
      - args: []
        env:
        - name: NEXTAUTH_URL
          value: url.replacethis
        - name: NEXTAUTH_SECRET
          value: secret.replacethis
        - name: NEXT_PUBLIC_API_DOMAIN
          value: mni-mc-api
        - name: NEXT_PUBLIC_DASHBOARD_DOMAIN
          value: mni-mc-dashboard
        - name: NEXT_PUBLIC_VPC_DOMAIN
          value: mni-mc-vpc
        - name: NEXT_PUBLIC_VM_DOMAIN
          value: mni-mc-vm
        - name: NEXT_PUBLIC_BS_DOMAIN
          value: mni-mc-bs
        - name: NEXT_PUBLIC_CTR_DOMAIN
          value: mni-mc-ctr
        image: ghcr.io/mni-cloud/mc-main:main
        imagePullPolicy: Always
        name: mni-mc-main
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-vm
  name: mni-mc-vm
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-vm
  template:
    metadata:
      labels:
        app: mni-mc-vm
    spec:
      containers:
      - args: []
        image: ghcr.io/mni-cloud/mc-vm:main
        imagePullPolicy: Always
        name: mni-mc-vm
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mni-mc-vpc
  name: mni-mc-vpc
  namespace: mni-cloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mni-mc-vpc
  template:
    metadata:
      labels:
        app: mni-mc-vpc
    spec:
      containers:
      - args: []
        image: ghcr.io/mni-cloud/mc-vpc:main
        imagePullPolicy: Always
        name: mni-mc-vpc
        ports:
        - containerPort: 3000
      imagePullSecrets:
      - name: ""
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mni-mc-ingress
  namespace: mni-cloud
spec:
  rules:
  - host: hostname.replacethis
    http:
      paths:
      - backend:
          service:
            name: mni-mc-main
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - hostname.replacethis
    secretName: mni-mc-cert
